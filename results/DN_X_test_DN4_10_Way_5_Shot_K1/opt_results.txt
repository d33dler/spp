Namespace(arch='DN_X', config='../models/architectures/configs/DN4_DA.yaml', dengine=False, refit_dengine=False, dataset_dir='../dataset/miniImageNet', data_name='test', mode='test', resume='../results/models/dn4__miniImageNet_epoch_23.pth.tar', epochs=1, ngpu=1, print_freq=100, outf='../results/DN_X_test_DN4_10_Way_5_Shot_K1')=> loaded checkpoint '../results/models/dn4__miniImageNet_epoch_23.pth.tar' (epoch 23)
DN_X(
  (BACKBONE): FourLayer_64F(
    (features): Sequential(
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (9): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (10): LeakyReLU(negative_slope=0.2, inplace=True)
      (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (13): LeakyReLU(negative_slope=0.2, inplace=True)
    )
    (criterion): CrossEntropyLoss()
  )
  (DE): XGBHead()
)
===================================== Round 0 =====================================
Testset: 600-------------0Namespace(arch='DN_X', config='../models/architectures/configs/DN4_DA.yaml', dengine=False, refit_dengine=False, dataset_dir='../dataset/miniImageNet', data_name='test', mode='test', resume='../results/models/dn4__miniImageNet_epoch_23.pth.tar', epochs=1, ngpu=1, print_freq=100, outf='../results/DN_X_test_DN4_10_Way_5_Shot_K1')=> loaded checkpoint '../results/models/dn4__miniImageNet_epoch_23.pth.tar' (epoch 23)
DN_X(
  (BACKBONE): FourLayer_64F(
    (features): Sequential(
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (9): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (10): LeakyReLU(negative_slope=0.2, inplace=True)
      (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (13): LeakyReLU(negative_slope=0.2, inplace=True)
    )
    (criterion): CrossEntropyLoss()
  )
  (DE): XGBHead()
)
===================================== Round 0 =====================================
Testset: 600-------------0Namespace(arch='DN_X', config='../models/architectures/configs/DN4_DA.yaml', dengine=False, refit_dengine=False, dataset_dir='../dataset/miniImageNet', data_name='test', mode='test', resume='../results/models/dn4__miniImageNet_epoch_23.pth.tar', epochs=1, ngpu=1, print_freq=100, outf='../results/DN_X_test_DN4_10_Way_5_Shot_K1')=> loaded checkpoint '../results/models/dn4__miniImageNet_epoch_23.pth.tar' (epoch 23)
DN_X(
  (BACKBONE): FourLayer_64F(
    (features): Sequential(
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (9): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (10): LeakyReLU(negative_slope=0.2, inplace=True)
      (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (13): LeakyReLU(negative_slope=0.2, inplace=True)
    )
    (criterion): CrossEntropyLoss()
  )
  (DE): XGBHead()
)
===================================== Round 0 =====================================
Testset: 600-------------0
Test-(23): [100/600]	Time 0.432 (0.399)	Loss 1.507 (1.576)	Prec@1 53.0 (50.22772216796875)

Test-(23): [200/600]	Time 0.360 (0.390)	Loss 1.769 (1.579)	Prec@1 41.0 (50.02487564086914)

Test-(23): [300/600]	Time 0.370 (0.389)	Loss 1.477 (1.583)	Prec@1 55.0 (50.01660919189453)

Test-(23): [400/600]	Time 0.374 (0.387)	Loss 1.400 (1.584)	Prec@1 60.0 (49.965087890625)

Test-(23): [500/600]	Time 0.379 (0.387)	Loss 1.746 (1.580)	Prec@1 39.0 (50.037925720214844)
 * Prec@1 50.073 Best_prec1 0.000Test accuracy= 50.073333740234375 h= 0.48875144124031067
===================================== Round 1 =====================================
Testset: 600-------------1
Test-(23): [100/600]	Time 0.384 (0.404)	Loss 1.630 (1.592)	Prec@1 47.0 (49.316829681396484)

Test-(23): [200/600]	Time 0.380 (0.394)	Loss 1.519 (1.585)	Prec@1 55.0 (50.054725646972656)

Test-(23): [300/600]	Time 0.393 (0.390)	Loss 1.660 (1.588)	Prec@1 42.0 (50.13621139526367)

Test-(23): [400/600]	Time 0.380 (0.390)	Loss 1.524 (1.586)	Prec@1 50.0 (49.912715911865234)

Test-(23): [500/600]	Time 0.367 (0.389)	Loss 1.337 (1.584)	Prec@1 66.0 (50.077842712402344)
 * Prec@1 50.313 Best_prec1 50.073Test accuracy= 50.313331604003906 h= 0.48134300112724304
===================================== Round 2 =====================================
Testset: 600-------------2
Test-(23): [100/600]	Time 0.373 (0.398)	Loss 1.656 (1.573)	Prec@1 48.0 (50.41584014892578)

Test-(23): [200/600]	Time 0.433 (0.391)	Loss 1.538 (1.574)	Prec@1 51.0 (50.597015380859375)

Test-(23): [300/600]	Time 0.375 (0.393)	Loss 1.704 (1.583)	Prec@1 45.0 (50.15614318847656)

Test-(23): [400/600]	Time 0.390 (0.390)	Loss 1.486 (1.584)	Prec@1 59.0 (50.11221694946289)

Test-(23): [500/600]	Time 0.437 (0.397)	Loss 1.572 (1.584)	Prec@1 51.0 (50.133731842041016)
 * Prec@1 50.128 Best_prec1 50.313Test accuracy= 50.128334045410156 h= 0.48223423957824707
===================================== Round 3 =====================================
Testset: 600-------------3
Test-(23): [100/600]	Time 0.459 (0.405)	Loss 1.479 (1.573)	Prec@1 59.0 (50.58415603637695)

Test-(23): [200/600]	Time 0.366 (0.393)	Loss 1.574 (1.583)	Prec@1 47.0 (49.81094741821289)

Test-(23): [300/600]	Time 0.400 (0.390)	Loss 1.578 (1.584)	Prec@1 47.0 (49.88372039794922)

Test-(23): [400/600]	Time 0.376 (0.389)	Loss 1.614 (1.584)	Prec@1 53.0 (49.852867126464844)

Test-(23): [500/600]	Time 0.345 (0.388)	Loss 1.518 (1.584)	Prec@1 49.0 (50.013973236083984)
 * Prec@1 50.087 Best_prec1 50.313Test accuracy= 50.086666107177734 h= 0.4712076783180237
===================================== Round 4 =====================================
Testset: 600-------------4
Test-(23): [100/600]	Time 0.356 (0.405)	Loss 1.514 (1.564)	Prec@1 48.0 (51.14851379394531)

Test-(23): [200/600]	Time 0.451 (0.412)	Loss 1.487 (1.574)	Prec@1 58.0 (50.776119232177734)

Test-(23): [300/600]	Time 0.365 (0.413)	Loss 1.713 (1.575)	Prec@1 47.0 (50.47175979614258)

Test-(23): [400/600]	Time 0.360 (0.411)	Loss 1.663 (1.580)	Prec@1 41.0 (50.14463806152344)

Test-(23): [500/600]	Time 0.382 (0.407)	Loss 1.484 (1.580)	Prec@1 56.0 (50.18962097167969)
 * Prec@1 50.178 Best_prec1 50.313Test accuracy= 50.1783332824707 h= 0.48273253440856934

Aver_accuracy= 50.15599822998047 Aver_h= 0.48125377893447874
Namespace(arch='DN_X', config='../models/architectures/configs/DN4_DA.yaml', dengine=True, refit_dengine=True, dataset_dir='../dataset/miniImageNet', data_name='test', mode='test', resume='../results/models/dn4__miniImageNet_epoch_23.pth.tar', epochs=1, ngpu=1, print_freq=100, outf='../results/DN_X_test_DN4_10_Way_5_Shot_K1')=> loaded checkpoint '../results/models/dn4__miniImageNet_epoch_23.pth.tar' (epoch 23)
DN_X(
  (BACKBONE): FourLayer_64F(
    (features): Sequential(
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (9): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (10): LeakyReLU(negative_slope=0.2, inplace=True)
      (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (13): LeakyReLU(negative_slope=0.2, inplace=True)
    )
    (criterion): CrossEntropyLoss()
  )
  (DE): XGBHead()
)
Trainset: 10000
Valset: 800
Testset: 600
Namespace(arch='DN_X', config='../models/architectures/configs/DN4_DA.yaml', dengine=False, refit_dengine=False, dataset_dir='../dataset/miniImageNet', data_name='test', mode='test', resume='../results/models/dn4__miniImageNet_epoch_23.pth.tar', epochs=1, ngpu=1, print_freq=100, outf='../results/DN_X_test_DN4_10_Way_5_Shot_K1')=> loaded checkpoint '../results/models/dn4__miniImageNet_epoch_23.pth.tar' (epoch 23)
DN_X(
  (BACKBONE): FourLayer_64F(
    (features): Sequential(
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): LeakyReLU(negative_slope=0.2, inplace=True)
      (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): LeakyReLU(negative_slope=0.2, inplace=True)
      (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (9): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (10): LeakyReLU(negative_slope=0.2, inplace=True)
      (11): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (12): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (13): LeakyReLU(negative_slope=0.2, inplace=True)
    )
    (criterion): CrossEntropyLoss()
  )
  (DE): XGBHead()
)
===================================== Round 0 =====================================
Testset: 600-------------0
Test-(23): [100/600]	Time 0.387 (0.399)	Loss 1.636 (1.554)	Prec@1 48.0 (51.39603805541992)
